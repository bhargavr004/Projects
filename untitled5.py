# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v4eAt4QRlkYeIe7Wbq3IAH6-2EUxyAw3

# **Financial Market News - Sentiment Analysis**

**This is the data(dummy) of Financial Market Top 25 News for the Day and Task is to Train and Predict Model for overall Sentiment Analysis**

**Import** **Library**
"""

import pandas as pd

import numpy as np

"""**Import Dataset**"""

df = pd.read_csv('/content/Financial Market News.csv', encoding='latin-1')

df.head()

df.info()

df.shape

df.columns

"""**Get Feature Selection**"""

' '.join(str(x) for x in df.iloc[1,2:27])

df.index

len(df.index)

news = []
for row in range(0,len(df.index)):
  news.append(' '.join(str(x) for x in df.iloc[row,2:27]))

type(news)

news[0]

x = news

type(x)

"""**Get Feature Text Conversion to Bag of Words**"""

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(lowercase=True, ngram_range=(1,1))
x = cv.fit_transform(x)

x.shape

y = df['Label']

y.shape

"""**Get Train Test Split**"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier(n_estimators=200)

rf.fit(x_train, y_train)

y_pred = rf.predict(x_test)

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

confusion_matrix(y_test, y_pred)

print(classification_report(y_test, y_pred))